<extensionManifest><groupId>com.example.nifi</groupId><artifactId>putdatabaserecord1-nar</artifactId><version>1.0.0</version><parentNar><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-nar</artifactId><version>2.1.0</version></parentNar><systemApiVersion>2.0.0</systemApiVersion><buildInfo></buildInfo><extensions><extension><name>com.example.nifi.processors.PutDatabaseRecord1</name><type>PROCESSOR</type><description>The PutDatabaseRecord processor uses a specified RecordReader to input (possibly multiple) records from an incoming flow file. These records are translated to SQL statements and executed as a single transaction. If any errors occur, the flow file is routed to failure or retry, and if the records are transmitted successfully, the incoming flow file is routed to success.  The type of statement executed by the processor is specified via the Statement Type property, which accepts some hard-coded values such as INSERT, UPDATE, and DELETE, as well as 'Use statement.type Attribute', which causes the processor to get the statement type from a flow file attribute.  IMPORTANT: If the Statement Type is UPDATE, then the incoming records must not alter the value(s) of the primary keys (or user-specified Update Keys). If such records are encountered, the UPDATE statement issued to the database may do nothing (if no existing records with the new primary key values are found), or could inadvertently corrupt the existing data (by changing records for which the new values of the primary keys exist).</description><tags><tag>sql</tag><tag>record</tag><tag>jdbc</tag><tag>put</tag><tag>database</tag><tag>update</tag><tag>insert</tag><tag>delete</tag></tags><properties><property><name>put-db-record-record-reader</name><displayName>Record Reader</displayName><description>Specifies the Controller Service to use for parsing incoming data and determining the data's schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.1.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>db-type</name><displayName>Database Type</displayName><description>The type/flavor of database, used for generating database-specific code. In many cases the Generic type should suffice, but some databases (such as Oracle) require custom SQL clauses.</description><defaultValue>Generic</defaultValue><allowableValues><allowableValue><displayName>Generic</displayName><value>Generic</value><description>Generic database type</description></allowableValue><allowableValue><displayName>Oracle</displayName><value>Oracle</value><description>Oracle database</description></allowableValue><allowableValue><displayName>Oracle 12+</displayName><value>Oracle 12+</value><description>Oracle 12+ database with enhanced features</description></allowableValue><allowableValue><displayName>MS SQL 2012+</displayName><value>MS SQL 2012+</value><description>Microsoft SQL Server 2012 and later</description></allowableValue><allowableValue><displayName>MS SQL 2008</displayName><value>MS SQL 2008</value><description>Microsoft SQL Server 2008</description></allowableValue><allowableValue><displayName>MySQL</displayName><value>MySQL</value><description>MySQL database</description></allowableValue><allowableValue><displayName>PostgreSQL</displayName><value>PostgreSQL</value><description>PostgreSQL database</description></allowableValue><allowableValue><displayName>Phoenix</displayName><value>Phoenix</value><description>Apache Phoenix database</description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-statement-type</name><displayName>Statement Type</displayName><description>Specifies the type of SQL Statement to generate</description><allowableValues><allowableValue><displayName>UPDATE</displayName><value>UPDATE</value><description></description></allowableValue><allowableValue><displayName>INSERT</displayName><value>INSERT</value><description></description></allowableValue><allowableValue><displayName>UPSERT</displayName><value>UPSERT</value><description></description></allowableValue><allowableValue><displayName>INSERT_IGNORE</displayName><value>INSERT_IGNORE</value><description></description></allowableValue><allowableValue><displayName>DELETE</displayName><value>DELETE</value><description></description></allowableValue><allowableValue><displayName>Use statement.type Attribute</displayName><value>Use statement.type Attribute</value><description></description></allowableValue><allowableValue><displayName>Use Record Path</displayName><value>Use Record Path</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Statement Type Record Path</name><displayName>Statement Type Record Path</displayName><description>Specifies a RecordPath to evaluate against each Record in order to determine the Statement Type.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>put-db-record-statement-type</propertyName><propertyDisplayName>Statement Type</propertyDisplayName><dependentValues><dependentValue>Use Record Path</dependentValue></dependentValues></dependency></dependencies></property><property><name>Data Record Path</name><displayName>Data Record Path</displayName><description>If specified, this property denotes a RecordPath...</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-dcbp-service</name><displayName>Database Connection Pooling Service</displayName><description>The Controller Service that is used to obtain a connection to the database for sending records.</description><controllerServiceDefinition><className>org.apache.nifi.dbcp.DBCPService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.1.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-catalog-name</name><displayName>Catalog Name</displayName><description>The name of the database (or the name of the catalog, depending on the destination system) that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty. Note that if the property is set and the database is case-sensitive, the catalog name must match the database's catalog name exactly.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-schema-name</name><displayName>Schema Name</displayName><description>The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty. Note that if the property is set and the database is case-sensitive, the schema name must match the database's schema name exactly.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-table-name</name><displayName>Table Name</displayName><description>The name of the table that the statement should affect. Note that if the database is case-sensitive, the table name must match the database's table name exactly.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-binary-format</name><displayName>Binary String Format</displayName><description>The format to be applied when decoding string values to binary.</description><defaultValue>UTF-8</defaultValue><allowableValues><allowableValue><displayName>UTF-8</displayName><value>UTF-8</value><description>String values for binary columns contain the original value as text via UTF-8 character encoding</description></allowableValue><allowableValue><displayName>Hexadecimal</displayName><value>Hexadecimal</value><description>String values for binary columns contain the original value in hexadecimal format</description></allowableValue><allowableValue><displayName>Base64</displayName><value>Base64</value><description>String values for binary columns contain the original value in Base64 encoded format</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-translate-field-names</name><displayName>Translate Field Names</displayName><description>If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Column Name Translation Strategy</name><displayName>Column Name Translation Strategy</displayName><description>The strategy used to normalize table column name. Column Name will be uppercased to do case-insensitive matching irrespective of strategy</description><defaultValue>REMOVE_UNDERSCORE</defaultValue><allowableValues><allowableValue><displayName>Remove Underscore</displayName><value>REMOVE_UNDERSCORE</value><description>Underscores '_' will be removed from column names Ex: 'Pics_1_23' becomes 'PICS123'</description></allowableValue><allowableValue><displayName>Remove Space</displayName><value>REMOVE_SPACE</value><description>Spaces will be removed from column names Ex. 'User Name' becomes 'USERNAME'</description></allowableValue><allowableValue><displayName>Remove Underscores and Spaces</displayName><value>REMOVE_UNDERSCORE_AND_SPACE</value><description>Spaces and Underscores will be removed from column names Ex. 'User_1 Name' becomes 'USER1NAME'</description></allowableValue><allowableValue><displayName>Remove Regular Expression Characters</displayName><value>REMOVE_ALL_SPECIAL_CHAR</value><description>Remove Regular Expression Characters Ex. 'user-id' becomes USERID ,total(estimated) become TOTALESTIMATED</description></allowableValue><allowableValue><displayName>Regular Expression</displayName><value>PATTERN</value><description>Remove characters matching this Regular Expression from the column names Ex.1. '\d' will  Remove all numbers 2. '[^a-zA-Z0-9_]' will remove special characters except underscore</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>put-db-record-translate-field-names</propertyName><propertyDisplayName>Translate Field Names</propertyDisplayName><dependentValues><dependentValue>true</dependentValue></dependentValues></dependency></dependencies></property><property><name>Column Name Translation Pattern</name><displayName>Column Name Translation Pattern</displayName><description>Column name will be normalized with this regular expression</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>Column Name Translation Strategy</propertyName><propertyDisplayName>Column Name Translation Strategy</propertyDisplayName><dependentValues><dependentValue>PATTERN</dependentValue></dependentValues></dependency></dependencies></property><property><name>put-db-record-unmatched-field-behavior</name><displayName>Unmatched Field Behavior</displayName><description>If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation</description><defaultValue>Ignore Unmatched Fields</defaultValue><allowableValues><allowableValue><displayName>Ignore Unmatched Fields</displayName><value>Ignore Unmatched Fields</value><description>Any field in the document that cannot be mapped to a column in the database is ignored</description></allowableValue><allowableValue><displayName>Fail on Unmatched Fields</displayName><value>Fail on Unmatched Fields</value><description>If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship</description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-unmatched-column-behavior</name><displayName>Unmatched Column Behavior</displayName><description>If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation</description><defaultValue>Fail on Unmatched Columns</defaultValue><allowableValues><allowableValue><displayName>Ignore Unmatched Columns</displayName><value>Ignore Unmatched Columns</value><description>Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged</description></allowableValue><allowableValue><displayName>Warn on Unmatched Columns</displayName><value>Warn on Unmatched Columns</value><description>Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged</description></allowableValue><allowableValue><displayName>Fail on Unmatched Columns</displayName><value>Fail on Unmatched Columns</value><description>A flow will fail if any column in the database that does not have a field in the document.  An error will be logged</description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-update-keys</name><displayName>Update Keys</displayName><description>A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>put-db-record-statement-type</propertyName><propertyDisplayName>Statement Type</propertyDisplayName><dependentValues><dependentValue>Use statement.type Attribute</dependentValue><dependentValue>Use Record Path</dependentValue><dependentValue>UPSERT</dependentValue><dependentValue>UPDATE</dependentValue><dependentValue>SQL</dependentValue></dependentValues></dependency></dependencies></property><property><name>put-db-record-delete-keys</name><displayName>Delete Keys</displayName><description>A comma-separated list of column names that uniquely identifies a row in the database for DELETE statements. If the Statement Type is DELETE and this property is not set, the table's columns are used. This property is ignored if the Statement Type is not DELETE</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>put-db-record-statement-type</propertyName><propertyDisplayName>Statement Type</propertyDisplayName><dependentValues><dependentValue>DELETE</dependentValue></dependentValues></dependency></dependencies></property><property><name>put-db-record-field-containing-sql</name><displayName>Field Containing SQL</displayName><description>If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>put-db-record-statement-type</propertyName><propertyDisplayName>Statement Type</propertyDisplayName><dependentValues><dependentValue>Use statement.type Attribute</dependentValue><dependentValue>Use Record Path</dependentValue></dependentValues></dependency></dependencies></property><property><name>put-db-record-allow-multiple-statements</name><displayName>Allow Multiple SQL Statements</displayName><description>If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>put-db-record-statement-type</propertyName><propertyDisplayName>Statement Type</propertyDisplayName><dependentValues><dependentValue>Use statement.type Attribute</dependentValue><dependentValue>Use Record Path</dependentValue></dependentValues></dependency></dependencies></property><property><name>put-db-record-quoted-identifiers</name><displayName>Quote Column Identifiers</displayName><description>Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-quoted-table-identifiers</name><displayName>Quote Table Identifiers</displayName><description>Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-query-timeout</name><displayName>Max Wait Time</displayName><description>The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.</description><defaultValue>0 seconds</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>rollback-on-failure</name><displayName>Rollback On Failure</displayName><description>Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>table-schema-cache-size</name><displayName>Table Schema Cache Size</displayName><description>Specifies how many Table Schemas should be cached</description><defaultValue>100</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>put-db-record-max-batch-size</name><displayName>Maximum Batch Size</displayName><description>Specifies maximum number of sql statements to be included in each batch sent to the database. Zero means the batch size is not limited, and all statements are put into a single batch which can cause high memory usage issues for a very large number of statements.</description><defaultValue>1000</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>database-session-autocommit</name><displayName>Database Session AutoCommit</displayName><description>The autocommit mode to set on the database connection being used. If set to false, the operation(s) will be explicitly committed or rolled back (based on success or failure respectively). If set to true, the driver/database automatically handles the commit/rollback.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>enable-sse-validation</name><displayName>Enable SSE Validation</displayName><description>Enable SSE validation before database operations</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>sse-engine-pool</name><displayName>SSE Engine Pool</displayName><description>Database Connection Pool for SSE Engine validation queries</description><controllerServiceDefinition><className>org.apache.nifi.dbcp.DBCPService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.1.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>enable-sse-validation</propertyName><propertyDisplayName>Enable SSE Validation</propertyDisplayName><dependentValues><dependentValue>true</dependentValue></dependentValues></dependency></dependencies></property><property><name>sse-source-pool</name><displayName>SSE Source Pool</displayName><description>Database Connection Pool for source database operations</description><controllerServiceDefinition><className>org.apache.nifi.dbcp.DBCPService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.1.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>enable-sse-validation</propertyName><propertyDisplayName>Enable SSE Validation</propertyDisplayName><dependentValues><dependentValue>true</dependentValue></dependentValues></dependency></dependencies></property><property><name>sse-target-pool</name><displayName>SSE Target Pool</displayName><description>Database Connection Pool for target database operations</description><controllerServiceDefinition><className>org.apache.nifi.dbcp.DBCPService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.1.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>enable-sse-validation</propertyName><propertyDisplayName>Enable SSE Validation</propertyDisplayName><dependentValues><dependentValue>true</dependentValue></dependentValues></dependency></dependencies></property></properties><relationships><relationship><name>retry</name><description>A FlowFile is routed to this relationship if the database cannot be updated but attempting the operation again may succeed</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failure</name><description>A FlowFile is routed to this relationship if the database cannot be updated and retrying the operation will also fail, such as an invalid query or an integrity constraint violation</description><autoTerminated>false</autoTerminated></relationship><relationship><name>success</name><description>Successfully created FlowFile from SQL query result set.</description><autoTerminated>false</autoTerminated></relationship><relationship><name>pending</name><description>A FlowFile is routed to this relationship if SSE validation fails and the operation is put in pending state</description><autoTerminated>false</autoTerminated></relationship></relationships><readsAttributes><readsAttribute><name>statement.type</name><description>If 'Use statement.type Attribute' is selected for the Statement Type property, the value of this attribute will be used to determine the type of statement (INSERT, UPDATE, DELETE, SQL, etc.) to generate and execute.</description></readsAttribute></readsAttributes><writesAttributes><writesAttribute><name>putdatabaserecord.error</name><description>If an error occurs during processing, the flow file will be routed to failure or retry, and this attribute will be populated with the cause of the error.</description></writesAttribute></writesAttributes><inputRequirement>INPUT_REQUIRED</inputRequirement><useCases><useCase><description>Insert records into a database</description><notes></notes><keywords></keywords><inputRequirement>INPUT_ALLOWED</inputRequirement><configuration></configuration></useCase></useCases></extension></extensions></extensionManifest>